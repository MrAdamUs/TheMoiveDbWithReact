{"ast":null,"code":"var _jsxFileName = \"/Users/adamm/Desktop/git/learn/moviereactwebsite/src/components/App.js\";\nimport React from 'react';\nimport NavBar from './NavBar/NavBar';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport BackDrop from './BackDrop/BackDrop';\nimport MoviesList from './MoviesList/MoviesList';\nimport SearchBar from './SearchBar/SearchBar';\nimport movieDb from '../api/movieDb';\nimport Pageination from './Pageination/Pageination';\nimport MovieInfo from './MovieInfo/MovieInfo';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTermSubmit = async term => {\n      const response = await movieDb.get('/search/movie', {\n        params: {\n          query: term\n        }\n      });\n      this.setState({\n        movies: response.data.results\n      });\n    };\n\n    this.ChoseFilter = async filter => {\n      const response = await movieDb.get(\"/movie/\".concat(filter));\n      this.setState({\n        movies: response.data.results,\n        totalResults: response.data.total_results\n      });\n    };\n\n    this.NavToggleClick = () => {\n      this.setState(prevState => {\n        return {\n          sideDrawerOpen: !prevState.sideDrawerOpen\n        };\n      });\n    };\n\n    this.backDropClick = () => {\n      this.setState({\n        sideDrawerOpen: false\n      });\n    };\n\n    this.nextPage = async pageNumber => {\n      const response = await movieDb.get(\"/movie/popular\", {\n        params: {\n          page: pageNumber\n        }\n      });\n      this.setState({\n        movies: response.data.results,\n        currentPage: pageNumber\n      });\n    };\n\n    this.viewMovieInfo = id => {\n      const filterdMovie = this.state.movies.filter(movie => movie.id === id);\n      const newCurrentMovie = filterdMovie.length > 0 ? filterdMovie[0] : null;\n      this.setState({\n        currentMovie: newCurrentMovie\n      });\n    };\n\n    this.closeMovieInfo = () => {\n      this.setState({\n        currentMovie: null\n      });\n    };\n\n    this.state = {\n      sideDrawerOpen: false,\n      movies: [],\n      totalResults: 0,\n      currentPage: 1,\n      currentMovie: null\n    };\n  }\n\n  async componentDidMount() {\n    const response = await movieDb.get(\"/movie/popular\");\n    this.setState({\n      movies: response.data.results,\n      totalResults: response.data.total_results\n    });\n  }\n\n  render() {\n    let backDrop;\n\n    if (this.state.sideDrawerOpen) {\n      backDrop = React.createElement(BackDrop, {\n        click: this.backDropClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    }\n\n    const numberPages = Math.floor(this.state.totalResults / 20);\n    return React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      drawerClic: this.NavToggleClick,\n      ChoesFilter: this.ChoseFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      show: this.state.sideDrawerOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), backDrop, React.createElement(\"main\", {\n      style: {\n        margin: '60px auto',\n        maxWidth: '1200px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.currentMovie === null ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" \", React.createElement(SearchBar, {\n      onFormsSubmit: this.onTermSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), \" \", React.createElement(MoviesList, {\n      viewMovieInfo: this.viewMovieInfo,\n      movies: this.state.movies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })) : React.createElement(MovieInfo, {\n      currentMovie: this.state.currentMovie,\n      closeMovieInfo: this.closeMovieInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), this.state.totalResults > 20 && this.state.currentMovie === null ? React.createElement(Pageination, {\n      pages: numberPages,\n      nextPage: this.nextPage,\n      currentPage: this.state.currentPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }) : ''));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/adamm/Desktop/git/learn/moviereactwebsite/src/components/App.js"],"names":["React","NavBar","SideDrawer","BackDrop","MoviesList","SearchBar","movieDb","Pageination","MovieInfo","App","Component","constructor","props","onTermSubmit","term","response","get","params","query","setState","movies","data","results","ChoseFilter","filter","totalResults","total_results","NavToggleClick","prevState","sideDrawerOpen","backDropClick","nextPage","pageNumber","page","currentPage","viewMovieInfo","id","filterdMovie","state","movie","newCurrentMovie","length","currentMovie","closeMovieInfo","componentDidMount","render","backDrop","numberPages","Math","floor","height","margin","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar/NavBar';\nimport SideDrawer from './SideDrawer/SideDrawer'\nimport BackDrop from './BackDrop/BackDrop';\nimport MoviesList from './MoviesList/MoviesList';\nimport SearchBar from './SearchBar/SearchBar';\nimport movieDb from '../api/movieDb';\nimport Pageination from './Pageination/Pageination';\nimport MovieInfo from './MovieInfo/MovieInfo';\n\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            sideDrawerOpen: false,\n            movies: [],\n            totalResults: 0,\n            currentPage: 1,\n            currentMovie: null\n        };\n    }\n\n    async componentDidMount() {\n        const response= await movieDb.get(\n          \"/movie/popular\"\n        );\n        this.setState({ movies: response.data.results , totalResults: response.data.total_results});\n      }\n  \n    onTermSubmit = async term => {\n      const response = await movieDb.get('/search/movie', {\n           params: {\n               query: term,   \n           }\n       });\n    \n       this.setState({ movies: response.data.results})\n    }\n\n    ChoseFilter =  async filter => {\n        const response= await movieDb.get(\n            `/movie/${filter}`,\n          );\n          this.setState({ movies: response.data.results , totalResults: response.data.total_results});\n    }\n\n\n\n    \n    NavToggleClick = () => {\n        this.setState((prevState) => {\n            return {sideDrawerOpen: !prevState.sideDrawerOpen};\n        });\n    };\n\n    backDropClick = () => {\n        this.setState({sideDrawerOpen: false})\n    };\n\n    nextPage = async (pageNumber) => {\n        const response= await movieDb.get(\"/movie/popular\", {\n            params: {\n                page: pageNumber,    \n            }\n        }\n          );\n          this.setState({ movies: response.data.results , currentPage: pageNumber });\n    }\n\n    viewMovieInfo = (id) => {\n        const filterdMovie = this.state.movies.filter(movie => movie.id === id)\n\n        const newCurrentMovie = filterdMovie.length > 0 ? filterdMovie[0] : null\n\n        this.setState({ currentMovie: newCurrentMovie })\n    }\n    \ncloseMovieInfo = () => {\n    this.setState({ currentMovie: null})\n}\n    \n\n    render() {\n        let backDrop;\n        if (this.state.sideDrawerOpen) {\n            backDrop = <BackDrop click={this.backDropClick} />\n        }\n        const numberPages = Math.floor(this.state.totalResults / 20);\n        return (\n            <div style={{height: '100%'}}>\n               <NavBar drawerClic={this.NavToggleClick} ChoesFilter={this.ChoseFilter} />\n               <SideDrawer show={this.state.sideDrawerOpen} />\n                {backDrop}\n               <main style={{margin: '60px auto', maxWidth:'1200px'}}> \n               {this.state.currentMovie === null ?  <div> <SearchBar onFormsSubmit={this.onTermSubmit}  /> <MoviesList viewMovieInfo={this.viewMovieInfo} movies={this.state.movies} /></div> : <MovieInfo currentMovie={this.state.currentMovie} closeMovieInfo={this.closeMovieInfo} />}\n              \n              \n                \n                 {this.state.totalResults > 20 && this.state.currentMovie === null ? <Pageination pages={numberPages}  nextPage={this.nextPage} currentPage={this.state.currentPage} /> : ''}\n               </main>\n              \n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}